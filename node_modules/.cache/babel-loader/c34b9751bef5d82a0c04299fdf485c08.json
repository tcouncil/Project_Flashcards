{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\AddCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../../utils/api/index\";\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\nimport CardForm from \"./CardForm\";\n\nfunction AddCard() {\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deck, setDeck] = useState(\"\");\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const history = useHistory();\n\n  const handleAddCard = e => {\n    e.preventDefault();\n    const newCard = {\n      \"front\": front,\n      \"back\": back,\n      \"deckId\": deckId,\n      \"id\": cardId\n    };\n    createCard(deckId, newCard);\n    history.push(`/decks/${deckId}`);\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId));\n\n    fetchDeck();\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  const handleFrontChange = e => setFront(e.target.value);\n\n  const handleBackChange = e => setBack(e.target.value);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deck.id}`,\n    linkName: deck.name,\n    pageName: \"Add Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, deck.name, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 55\n    }\n  }, \"Add Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    onSubmit: handleAddCard,\n    handleFrontChange: handleFrontChange,\n    handleBackChange: handleBackChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default AddCard;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Card/AddCard.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","readDeck","createCard","BreadCrumbNav","CardForm","AddCard","deckId","cardId","deck","setDeck","front","setFront","back","setBack","history","handleAddCard","e","preventDefault","newCard","push","fetchDeck","abortController","AbortController","signal","abort","handleFrontChange","target","value","handleBackChange","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMkB,OAAO,GAAGf,UAAU,EAA1B;;AAEA,QAAMgB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG;AACZ,eAASR,KADG;AAEZ,cAAQE,IAFI;AAGZ,gBAAUN,MAHE;AAIZ,YAAMC;AAJM,KAAhB;AAMAL,IAAAA,UAAU,CAACI,MAAD,EAASY,OAAT,CAAV;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAc,UAASb,MAAO,EAA9B;;AAEA,UAAMc,SAAS,GAAG,YAAYX,OAAO,CAAC,MAAMR,QAAQ,CAACK,MAAD,CAAf,CAArC;;AACAc,IAAAA,SAAS;AACZ,GAbD;;AAeAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMF,SAAS,GAAG,YAAYX,OAAO,CAAC,MAAMR,QAAQ,CAACK,MAAD,EAASe,eAAe,CAACE,MAAzB,CAAf,CAArC;;AACAH,IAAAA,SAAS;AACT,WAAO,MAAMC,eAAe,CAACG,KAAhB,EAAb;AACH,GALQ,EAKN,CAAClB,MAAD,CALM,CAAT;;AAOA,QAAMmB,iBAAiB,GAAIT,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV,CAAzC;;AACA,QAAMC,gBAAgB,GAAIZ,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACU,MAAF,CAASC,KAAV,CAAvC;;AACA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,UAASnB,IAAI,CAACqB,EAAG,EAAvC;AAA0C,IAAA,QAAQ,EAAErB,IAAI,CAACsB,IAAzD;AAA+D,IAAA,QAAQ,EAAE,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBtB,IAAI,CAACsB,IAA3B,MADJ,eAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1C,CAFJ,eAKI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEf,aAApB;AAAmC,IAAA,iBAAiB,EAAEU,iBAAtD;AAAyE,IAAA,gBAAgB,EAAEG,gBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAevB,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, createCard } from \"../../utils/api/index\";\r\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nfunction AddCard() {\r\n    const { deckId, cardId } = useParams();\r\n    const [deck, setDeck] = useState(\"\");\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const handleAddCard = (e) => {\r\n        e.preventDefault();\r\n        const newCard = {\r\n            \"front\": front,\r\n            \"back\": back,\r\n            \"deckId\": deckId,\r\n            \"id\": cardId\r\n        };\r\n        createCard(deckId, newCard);\r\n        history.push(`/decks/${deckId}`);\r\n\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck();\r\n        return () => abortController.abort();\r\n    }, [deckId]);\r\n\r\n    const handleFrontChange = (e) => setFront(e.target.value);\r\n    const handleBackChange = (e) => setBack(e.target.value);\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deck.id}`} linkName={deck.name} pageName={\"Add Card\"} />\r\n            <div className=\"row d-flex\">\r\n                <h3 className=\"mr-1\">{deck.name}:</h3><h3>Add Card</h3>\r\n            </div>\r\n            <CardForm onSubmit={handleAddCard} handleFrontChange={handleFrontChange} handleBackChange={handleBackChange}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}