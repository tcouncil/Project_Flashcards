{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\nimport { readDeck, listCards } from \"../../utils/api/index\";\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\n\nfunction Study() {\n  const {\n    deckId\n  } = useParams();\n  const [cardNum, setCardNum] = useState(1);\n  const [cardText, setCardText] = useState(\"front\");\n  const [cardTotal, setCardTotal] = useState(0);\n  const [onBack, setOnBack] = useState(false);\n  const [onEnd, setOnEnd] = useState(false);\n  const [deck, setDeck] = useState([{}]);\n  const [cards, setCards] = useState([{}]);\n\n  const flip = e => {\n    if (cardText === cards[cardNum - 1].front) {\n      setCardText(text => text = cards[cardNum - 1].back);\n      if (cardNum !== cardTotal) setOnBack(bool => bool = true);else setOnEnd(bool => bool = true);\n    } else {\n      setCardText(text => text = cards[cardNum - 1].front);\n    }\n  };\n\n  const next = e => {\n    setCardText(text => text = cards[cardNum].front);\n    setCardNum(num => num < cards.length ? num + 1 : num + 0);\n    setOnBack(bool => bool = false);\n  };\n\n  const reset = e => {\n    setCardText(text => text = cards[0].front);\n    setCardNum(num => num = 1);\n    setOnBack(bool => bool = false);\n    setOnEnd(bool => bool = false);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n\n    const fetchCards = async () => setCards(await listCards(deckId, abortController.signal));\n\n    fetchCards();\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    if (cards) {\n      setCardTotal(cards.length);\n      setCardText(cards[cardNum - 1].front);\n    }\n  }, [cards, cardNum]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: deck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Study: \", deck.name)), cardTotal > 2 ? /*#__PURE__*/React.createElement(StudyCard, {\n    cardText: cardText,\n    onBack: onBack,\n    onEnd: onEnd,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardTotal: cardTotal,\n    next: next,\n    flip: flip,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(StudyNotEnoughCards, {\n    cardLength: cardTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 199\n    }\n  }));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Deck/Study.js"],"names":["React","useState","useEffect","BreadCrumbNav","StudyCard","StudyNotEnoughCards","readDeck","listCards","Switch","Route","useParams","useHistory","Study","deckId","cardNum","setCardNum","cardText","setCardText","cardTotal","setCardTotal","onBack","setOnBack","onEnd","setOnEnd","deck","setDeck","cards","setCards","flip","e","front","text","back","bool","next","num","length","reset","abortController","AbortController","fetchDeck","signal","fetchCards","abort","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEA,QAAM2B,IAAI,GAAIC,CAAD,IAAO;AAChB,QAAIb,QAAQ,KAAKU,KAAK,CAACZ,OAAO,GAAG,CAAX,CAAL,CAAmBgB,KAApC,EAA2C;AACvCb,MAAAA,WAAW,CAACc,IAAI,IAAIA,IAAI,GAAGL,KAAK,CAACZ,OAAO,GAAG,CAAX,CAAL,CAAmBkB,IAAnC,CAAX;AACA,UAAIlB,OAAO,KAAKI,SAAhB,EACIG,SAAS,CAACY,IAAI,IAAIA,IAAI,GAAG,IAAhB,CAAT,CADJ,KAGIV,QAAQ,CAACU,IAAI,IAAIA,IAAI,GAAG,IAAhB,CAAR;AACP,KAND,MAOK;AACDhB,MAAAA,WAAW,CAACc,IAAI,IAAIA,IAAI,GAAGL,KAAK,CAACZ,OAAO,GAAG,CAAX,CAAL,CAAmBgB,KAAnC,CAAX;AACH;AACJ,GAXD;;AAaA,QAAMI,IAAI,GAAIL,CAAD,IAAO;AAChBZ,IAAAA,WAAW,CAACc,IAAI,IAAIA,IAAI,GAAGL,KAAK,CAACZ,OAAD,CAAL,CAAegB,KAA/B,CAAX;AACAf,IAAAA,UAAU,CAACoB,GAAG,IAAIA,GAAG,GAAGT,KAAK,CAACU,MAAZ,GAAqBD,GAAG,GAAG,CAA3B,GAA+BA,GAAG,GAAG,CAA7C,CAAV;AACAd,IAAAA,SAAS,CAACY,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAT;AACH,GAJD;;AAMA,QAAMI,KAAK,GAAIR,CAAD,IAAO;AACjBZ,IAAAA,WAAW,CAACc,IAAI,IAAIA,IAAI,GAAGL,KAAK,CAAC,CAAD,CAAL,CAASI,KAAzB,CAAX;AACAf,IAAAA,UAAU,CAACoB,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAV;AACAd,IAAAA,SAAS,CAACY,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAT;AACAV,IAAAA,QAAQ,CAACU,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAR;AACH,GALD;;AAOA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,SAAS,GAAG,YAAYf,OAAO,CAAC,MAAMnB,QAAQ,CAACO,MAAD,EAASyB,eAAe,CAACG,MAAzB,CAAf,CAArC;;AACAD,IAAAA,SAAS;;AAET,UAAME,UAAU,GAAG,YAAYf,QAAQ,CAAC,MAAMpB,SAAS,CAACM,MAAD,EAASyB,eAAe,CAACG,MAAzB,CAAhB,CAAvC;;AACAC,IAAAA,UAAU;AAEV,WAAO,MAAMJ,eAAe,CAACK,KAAhB,EAAb;AACH,GATQ,EASN,CAAC9B,MAAD,CATM,CAAT;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,KAAJ,EAAW;AACPP,MAAAA,YAAY,CAACO,KAAK,CAACU,MAAP,CAAZ;AACAnB,MAAAA,WAAW,CAACS,KAAK,CAACZ,OAAO,GAAG,CAAX,CAAL,CAAmBgB,KAApB,CAAX;AACH;AACJ,GALQ,EAKN,CAACJ,KAAD,EAAQZ,OAAR,CALM,CAAT;AAOA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,UAASD,MAAO,EAAtC;AAAyC,IAAA,QAAQ,EAAEW,IAAI,CAACoB,IAAxD;AAA8D,IAAA,QAAQ,EAAE,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYpB,IAAI,CAACoB,IAAjB,CADJ,CAFJ,EAKM1B,SAAS,GAAG,CAAZ,gBAAgB,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEF,QAArB;AAA+B,IAAA,MAAM,EAAEI,MAAvC;AAA+C,IAAA,KAAK,EAAEE,KAAtD;AAA6D,IAAA,OAAO,EAAER,OAAtE;AAA+E,IAAA,UAAU,EAAEC,UAA3F;AAAuG,IAAA,SAAS,EAAEG,SAAlH;AAA6H,IAAA,IAAI,EAAEgB,IAAnI;AAAyI,IAAA,IAAI,EAAEN,IAA/I;AAAqJ,IAAA,KAAK,EAAES,KAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,gBAAwL,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEnB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL9L,CADJ;AASH;;AAED,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\r\nimport { readDeck, listCards } from \"../../utils/api/index\";\r\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\r\n\r\nfunction Study() {\r\n    const { deckId } = useParams();\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardText, setCardText] = useState(\"front\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n    const [onBack, setOnBack] = useState(false);\r\n    const [onEnd, setOnEnd] = useState(false);\r\n    const [deck, setDeck] = useState([{}]);\r\n    const [cards, setCards] = useState([{}]);\r\n\r\n    const flip = (e) => {\r\n        if (cardText === cards[cardNum - 1].front) {\r\n            setCardText(text => text = cards[cardNum - 1].back)\r\n            if (cardNum !== cardTotal)\r\n                setOnBack(bool => bool = true);\r\n            else\r\n                setOnEnd(bool => bool = true);\r\n        }\r\n        else {\r\n            setCardText(text => text = cards[cardNum - 1].front)\r\n        }\r\n    }\r\n\r\n    const next = (e) => {\r\n        setCardText(text => text = cards[cardNum].front);\r\n        setCardNum(num => num < cards.length ? num + 1 : num + 0);\r\n        setOnBack(bool => bool = false);\r\n    }\r\n\r\n    const reset = (e) => {\r\n        setCardText(text => text = cards[0].front);\r\n        setCardNum(num => num = 1);\r\n        setOnBack(bool => bool = false);\r\n        setOnEnd(bool => bool = false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck()\r\n\r\n        const fetchCards = async () => setCards(await listCards(deckId, abortController.signal));\r\n        fetchCards()\r\n\r\n        return () => abortController.abort();\r\n    }, [deckId]);\r\n\r\n    useEffect(() => {\r\n        if (cards) {\r\n            setCardTotal(cards.length);\r\n            setCardText(cards[cardNum - 1].front);\r\n        }\r\n    }, [cards, cardNum]);\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={deck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {deck.name}</h1>\r\n            </div>\r\n            { cardTotal > 2 ? <StudyCard cardText={cardText} onBack={onBack} onEnd={onEnd} cardNum={cardNum} setCardNum={setCardNum} cardTotal={cardTotal} next={next} flip={flip} reset={reset} /> : <StudyNotEnoughCards cardLength={cardTotal} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}