{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\nimport { EyeIcon, BookIcon, TrashIcon } from '@primer/octicons-react';\nimport DeckCard from \"./DeckCard\";\n\nfunction Decks({\n  decks,\n  setDecks,\n  cards,\n  setCards\n}) {\n  const handleDeleteDeck = async e => {\n    if (window.confirm('Delete this deck?')) {\n      if (e.target.getAttribute(\"data-index\") === null) await deleteDeck(e.target.parentNode.getAttribute(\"data-index\"));else await deleteDeck(e.target.getAttribute(\"data-index\"));\n    }\n\n    const fetchDecks = async () => setDecks(await listDecks());\n\n    fetchDecks();\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/cards\").then(res => res.json()).then(res => setCards(res));\n  }, []);\n  {\n    /* Existing decks are shown with the deck name, number of cards, and a study view and delete button */\n  }\n  const content = decks.map((deck, index) => {\n    return /*#__PURE__*/React.createElement(DeckCard, {\n      deck: deck,\n      index: index,\n      handleDeleteDeck: handleDeleteDeck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, content);\n}\n\nexport default Decks;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Decks.js"],"names":["React","useState","useEffect","Link","deleteDeck","listDecks","EyeIcon","BookIcon","TrashIcon","DeckCard","Decks","decks","setDecks","cards","setCards","handleDeleteDeck","e","window","confirm","target","getAttribute","parentNode","fetchDecks","fetch","then","res","json","content","map","deck","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,wBAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAf,EAAqD;AACnD,QAAMC,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpC,QAAIC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAJ,EAAyC;AACvC,UAAIF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,MAAwC,IAA5C,EACE,MAAMhB,UAAU,CAACY,CAAC,CAACG,MAAF,CAASE,UAAT,CAAoBD,YAApB,CAAiC,YAAjC,CAAD,CAAhB,CADF,KAGE,MAAMhB,UAAU,CAACY,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAD,CAAhB;AACH;;AAED,UAAME,UAAU,GAAG,YAAYV,QAAQ,CAAC,MAAMP,SAAS,EAAhB,CAAvC;;AACAiB,IAAAA,UAAU;AACX,GAVD;;AAYApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIX,QAAQ,CAACW,GAAD,CAFvB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA;AAAC;AAAwG;AACzG,QAAME,OAAO,GAAGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,wBAAQ,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAsB,MAAA,KAAK,EAAEC,KAA7B;AAAoC,MAAA,gBAAgB,EAAEf,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFe,CAAhB;AAIA,sBACE,0CACGY,OADH,CADF;AAKD;;AAED,eAAejB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\r\nimport { EyeIcon, BookIcon, TrashIcon } from '@primer/octicons-react';\r\nimport DeckCard from \"./DeckCard\";\r\n\r\nfunction Decks({ decks, setDecks, cards, setCards }) {\r\n  const handleDeleteDeck = async (e) => {\r\n    if (window.confirm('Delete this deck?')) {\r\n      if (e.target.getAttribute(\"data-index\") === null)\r\n        await deleteDeck(e.target.parentNode.getAttribute(\"data-index\"));\r\n      else\r\n        await deleteDeck(e.target.getAttribute(\"data-index\"));\r\n    }\r\n\r\n    const fetchDecks = async () => setDecks(await listDecks())\r\n    fetchDecks();\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/cards\")\r\n      .then(res => res.json())\r\n      .then(res => setCards(res));\r\n  }, []);\r\n\r\n  {/* Existing decks are shown with the deck name, number of cards, and a study view and delete button */ }\r\n  const content = decks.map((deck, index) => {\r\n    return (<DeckCard deck={deck} index={index} handleDeleteDeck={handleDeleteDeck} />);\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Decks;"]},"metadata":{},"sourceType":"module"}