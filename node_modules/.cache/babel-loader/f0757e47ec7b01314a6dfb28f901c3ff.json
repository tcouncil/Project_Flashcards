{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\n\nfunction Study({\n  deck,\n  cards = [{\n    front: \"front\",\n    back: \"back\"\n  }],\n  deckId\n}) {\n  const [cardNum, setCardNum] = useState(1);\n  const [cardText, setCardText] = useState(\"front\");\n  const [cardTotal, setCardTotal] = useState(0);\n  const [onBack, setOnBack] = useState(false);\n  const [onEnd, setOnEnd] = useState(false);\n\n  const flip = e => {\n    if (cardText === cards[cardNum - 1].front) {\n      setCardText(text => text = cards[cardNum - 1].back);\n      if (cardNum !== cardTotal) setOnBack(bool => bool = true);else setOnEnd(bool => bool = true);\n    } else {\n      setCardText(text => text = cards[cardNum - 1].front);\n    }\n  };\n\n  const next = e => {\n    setCardText(text => text = cards[cardNum].front);\n    setCardNum(num => num < cards.length ? num + 1 : num + 0);\n    setOnBack(bool => bool = false);\n  };\n\n  const reset = e => {\n    setCardText(text => text = cards[0].front);\n    setCardNum(num => num = 1);\n    setOnBack(bool => bool = false);\n    setOnEnd(bool => bool = false);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    setCardTotal(cards.length);\n    setCardText(cards[cardNum - 1].front);\n    return () => abortController.abort();\n  }, [cards, cardNum]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: deck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Study: \", deck.name)), cardTotal > 2 ? /*#__PURE__*/React.createElement(StudyCard, {\n    cardText: cardText,\n    onBack: onBack,\n    onEnd: onEnd,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardTotal: cardTotal,\n    next: next,\n    flip: flip,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(StudyNotEnoughCards, {\n    cardLength: cardTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 199\n    }\n  }));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Deck/Study.js"],"names":["React","useState","useEffect","BreadCrumbNav","StudyCard","StudyNotEnoughCards","Study","deck","cards","front","back","deckId","cardNum","setCardNum","cardText","setCardText","cardTotal","setCardTotal","onBack","setOnBack","onEnd","setOnEnd","flip","e","text","bool","next","num","length","reset","abortController","AbortController","fetchDeck","setDeck","readDeck","signal","abort","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\r\n\r\nfunction Study({ deck, cards=[{front: \"front\", back: \"back\"}], deckId }) {\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardText, setCardText] = useState(\"front\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n    const [onBack, setOnBack] = useState(false);\r\n    const [onEnd, setOnEnd] = useState(false);\r\n\r\n    const flip = (e) => {\r\n        if (cardText === cards[cardNum - 1].front) {\r\n            setCardText(text => text = cards[cardNum - 1].back)\r\n            if (cardNum !== cardTotal)\r\n                setOnBack(bool => bool = true);\r\n            else\r\n                setOnEnd(bool => bool = true);\r\n        }\r\n        else {\r\n            setCardText(text => text = cards[cardNum - 1].front)\r\n        }\r\n    }\r\n\r\n    const next = (e) => {\r\n        setCardText(text => text = cards[cardNum].front);\r\n        setCardNum(num => num < cards.length ? num + 1 : num + 0);\r\n        setOnBack(bool => bool = false);\r\n    }\r\n\r\n    const reset = (e) => {\r\n        setCardText(text => text = cards[0].front);\r\n        setCardNum(num => num = 1);\r\n        setOnBack(bool => bool = false);\r\n        setOnEnd(bool => bool = false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck()\r\n\r\n        return () => abortController.abort();\r\n    }, [deckId]);\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        setCardTotal(cards.length);\r\n        setCardText(cards[cardNum - 1].front);\r\n        return () => abortController.abort();\r\n    }, [cards, cardNum]);\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={deck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {deck.name}</h1>\r\n            </div>\r\n            { cardTotal > 2 ? <StudyCard cardText={cardText} onBack={onBack} onEnd={onEnd} cardNum={cardNum} setCardNum={setCardNum} cardTotal={cardTotal} next={next} flip={flip} reset={reset} /> : <StudyNotEnoughCards cardLength={cardTotal} /> }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}