{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck, listCards, readCard } from \"../utils/api/index\";\nimport BreadCrumbNav from \"./BreadCrumbNav\";\n\nfunction Study() {\n  const {\n    deckId\n  } = useParams();\n  const [studyDeck, setStudyDeck] = useState([]);\n  const [studyCard, setStudyCard] = useState([]);\n  const [studyCards, setStudyCards] = useState([]);\n  const [cardId, setCardId] = useState(1);\n  const [cardNum, setCardNum] = useState(1);\n  const [cardTotal, setCardTotal] = useState(1);\n  useEffect(() => {\n    const fetchDeck = async () => setStudyDeck(await readDeck(deckId));\n\n    fetchDeck();\n\n    const fetchCards = async () => setStudyCards(await listCards(deckId));\n\n    fetchCards();\n\n    const fetchCard = async () => setStudyCard(await readCard(cardId));\n\n    fetchCard();\n  }, []);\n  useEffect(() => {\n    setCardTotal(total => total = studyCards.filter(card => card.deckId !== deckId).length);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: studyDeck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Study: \", studyDeck.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row text-center d-flex justify-content-center mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-text col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Card \", cardNum, \" of \", cardTotal)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, studyCard.front)))));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","Link","useParams","readDeck","listCards","readCard","BreadCrumbNav","Study","deckId","studyDeck","setStudyDeck","studyCard","setStudyCard","studyCards","setStudyCards","cardId","setCardId","cardNum","setCardNum","cardTotal","setCardTotal","fetchDeck","fetchCards","fetchCard","total","filter","card","length","name","front"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,oBAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,SAAS,GAAG,YAAYX,YAAY,CAAC,MAAMP,QAAQ,CAACK,MAAD,CAAf,CAA1C;;AACAa,IAAAA,SAAS;;AAET,UAAMC,UAAU,GAAG,YAAYR,aAAa,CAAC,MAAMV,SAAS,CAACI,MAAD,CAAhB,CAA5C;;AACAc,IAAAA,UAAU;;AAEV,UAAMC,SAAS,GAAG,YAAYX,YAAY,CAAC,MAAMP,QAAQ,CAACU,MAAD,CAAf,CAA1C;;AACAQ,IAAAA,SAAS;AACZ,GATQ,EASN,EATM,CAAT;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,YAAY,CAACI,KAAK,IAAIA,KAAK,GAAGX,UAAU,CAACY,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAAClB,MAAL,KAAgBA,MAA1C,EAAkDmB,MAApE,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,UAASnB,MAAO,EAAtC;AAAyC,IAAA,QAAQ,EAAEC,SAAS,CAACmB,IAA7D;AAAmE,IAAA,QAAQ,EAAE,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYnB,SAAS,CAACmB,IAAtB,CADJ,CAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuCX,OAAvC,UAAoDE,SAApD,CADR,CADA,eAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCR,SAAS,CAACkB,KAA3C,CADJ,CAJJ,CADJ,CALJ,CADJ;AAkBH;;AAED,eAAetB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { readDeck, listCards, readCard } from \"../utils/api/index\";\r\nimport BreadCrumbNav from \"./BreadCrumbNav\";\r\n\r\nfunction Study() {\r\n    const { deckId } = useParams();\r\n    const [studyDeck, setStudyDeck] = useState([]);\r\n    const [studyCard, setStudyCard] = useState([]);\r\n    const [studyCards, setStudyCards] = useState([]);\r\n    const [cardId, setCardId] = useState(1);\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardTotal, setCardTotal] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        const fetchDeck = async () => setStudyDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n\r\n        const fetchCards = async () => setStudyCards(await listCards(deckId));\r\n        fetchCards();\r\n\r\n        const fetchCard = async () => setStudyCard(await readCard(cardId));\r\n        fetchCard();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCardTotal(total => total = studyCards.filter(card => card.deckId !== deckId).length);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={studyDeck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {studyDeck.name}</h1>\r\n            </div>\r\n            <div className=\"row text-center d-flex justify-content-center mt-1\">\r\n                <div className=\"card w-100\">\r\n                <div className=\"card-body row\">\r\n                        <h4 className=\"card-text col-12\">Card {cardNum} of {cardTotal}</h4>\r\n                    </div>\r\n                    <div className=\"card-body row\">\r\n                        <p className=\"card-text col-12\">{studyCard.front}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}