{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadCrumbNav from \"./Common/BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\n\nfunction Study() {\n  const [cardNum, setCardNum] = useState(1);\n  const [cardText, setCardText] = useState(\"front\");\n  const [cardTotal, setCardTotal] = useState(0);\n  const [onBack, setOnBack] = useState(false);\n  const [onEnd, setOnEnd] = useState(false);\n\n  const flip = e => {\n    if (cardText === deck.cards[cardNum - 1].front) {\n      setCardText(text => text = deck.cards[cardNum - 1].back);\n      if (cardNum !== cardTotal) setOnBack(bool => bool = true);else setOnEnd(bool => bool = true);\n    } else {\n      setCardText(text => text = deck.cards[cardNum - 1].front);\n    }\n  };\n\n  const next = e => {\n    setCardText(text => text = deck.cards[cardNum].front);\n    setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\n    setOnBack(bool => bool = false);\n  };\n\n  const reset = e => {\n    setCardText(text => text = deck.cards[0].front);\n    setCardNum(num => num = 1);\n    setOnBack(bool => bool = false);\n    setOnEnd(bool => bool = false);\n  };\n\n  useEffect(() => {\n    setCardTotal(deck.cards.length);\n    setCardText(deck.cards[cardNum - 1].front);\n  }, [deck.cards]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: deck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Study: \", deck.name)), /*#__PURE__*/React.createElement(StudyCard, {\n    cardText: cardText,\n    onBack: onBack,\n    onEnd: onEnd,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardTotal: cardTotal,\n    next: next,\n    flip: flip,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","BreadCrumbNav","StudyCard","Study","cardNum","setCardNum","cardText","setCardText","cardTotal","setCardTotal","onBack","setOnBack","onEnd","setOnEnd","flip","e","deck","cards","front","text","back","bool","next","num","length","reset","deckId","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BreadCrumbNav from \"./Common/BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\n\r\nfunction Study() {\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardText, setCardText] = useState(\"front\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n    const [onBack, setOnBack] = useState(false);\r\n    const [onEnd, setOnEnd] = useState(false);\r\n\r\n    const flip = (e) => {\r\n        if (cardText === deck.cards[cardNum - 1].front) {\r\n            setCardText(text => text = deck.cards[cardNum - 1].back)\r\n            if (cardNum !== cardTotal)\r\n                setOnBack(bool => bool = true);\r\n            else\r\n                setOnEnd(bool => bool = true);\r\n        }\r\n        else {\r\n            setCardText(text => text = deck.cards[cardNum - 1].front)\r\n        }\r\n    }\r\n\r\n    const next = (e) => {\r\n        setCardText(text => text = deck.cards[cardNum].front);\r\n        setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\r\n        setOnBack(bool => bool = false);\r\n    }\r\n\r\n    const reset = (e) => {\r\n        setCardText(text => text = deck.cards[0].front);\r\n        setCardNum(num => num = 1);\r\n        setOnBack(bool => bool = false);\r\n        setOnEnd(bool => bool = false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardTotal(deck.cards.length);\r\n        setCardText(deck.cards[cardNum - 1].front);\r\n    }, [deck.cards]);\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={deck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {deck.name}</h1>\r\n            </div>\r\n            <StudyCard cardText={cardText} onBack={onBack} onEnd={onEnd} cardNum={cardNum} setCardNum={setCardNum} cardTotal={cardTotal} next={next} flip={flip} reset={reset} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}