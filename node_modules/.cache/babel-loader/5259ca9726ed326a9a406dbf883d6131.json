{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\EditCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\nimport CardForm from \"./CardForm\";\n\nfunction EditCard() {\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState([]);\n  const [deck, setDeck] = useState([]);\n  const [changed, setChanged] = useState(false);\n  const history = useHistory();\n\n  const handleEditCard = e => {\n    e.preventDefault();\n\n    if (changed) {\n      const updatedCard = {\n        \"front\": front,\n        \"back\": back,\n        \"deckId\": deckId,\n        \"id\": cardId\n      };\n      updateCard(updatedCard);\n      setChanged(bool => bool = false);\n    }\n\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    const fetchDeck = async () => setDeck(await readDeck(deckId));\n\n    fetchDeck();\n\n    const fetchCard = async () => setCard(await readCard(cardId));\n\n    fetchCard();\n  }, [cardId, deckId]);\n  const [front, setFront] = useState(card.front);\n  const [back, setBack] = useState(card.back);\n\n  const handleFrontChange = e => {\n    setFront(e.target.value);\n    setChanged(bool => bool = true);\n  };\n\n  const handleBackChange = e => {\n    setBack(e.target.value);\n    setChanged(bool => bool = true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deck.id}`,\n    linkName: deck.name,\n    pageName: \"Edit Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Edit Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    onSubmit: handleEditCard,\n    handleFrontChange: handleFrontChange,\n    handleBackChange: handleBackChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default EditCard;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Card/EditCard.js"],"names":["React","useState","useEffect","useHistory","useParams","readDeck","readCard","updateCard","BreadCrumbNav","CardForm","EditCard","deckId","cardId","card","setCard","deck","setDeck","changed","setChanged","history","handleEditCard","e","preventDefault","updatedCard","front","back","bool","push","fetchDeck","fetchCard","setFront","setBack","handleFrontChange","target","value","handleBackChange","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\r\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nfunction EditCard() {\r\n    const { deckId, cardId } = useParams();\r\n    const [card, setCard] = useState([])\r\n    const [deck, setDeck] = useState([]);\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleEditCard = (e) => {\r\n        e.preventDefault();\r\n        if (changed) {\r\n            const updatedCard = {\r\n                \"front\": front,\r\n                \"back\": back,\r\n                \"deckId\": deckId,\r\n                \"id\": cardId\r\n            };\r\n            updateCard(updatedCard);\r\n            setChanged(bool => bool = false);\r\n        }\r\n        history.push(`/decks/${deckId}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n        const fetchCard = async () => setCard(await readCard(cardId));\r\n        fetchCard();\r\n    }, [cardId, deckId]);\r\n\r\n    const [front, setFront] = useState(card.front);\r\n    const [back, setBack] = useState(card.back);\r\n\r\n    const handleFrontChange = (e) => { setFront(e.target.value); setChanged(bool => bool = true) };\r\n    const handleBackChange = (e) => { setBack(e.target.value); setChanged(bool => bool = true) };\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deck.id}`} linkName={deck.name} pageName={\"Edit Card\"} />\r\n            <div className=\"row\">\r\n                <h3>Edit Card</h3>\r\n            </div>\r\n            <CardForm onSubmit={handleEditCard} handleFrontChange={handleFrontChange} handleBackChange={handleBackChange} />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}