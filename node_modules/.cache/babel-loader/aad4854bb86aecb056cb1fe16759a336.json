{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\Deck.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\nimport { deleteDeck, readDeck, listCards } from \"../../utils/api/index\";\nimport Cards from \"../Card/Cards\";\nimport DeckInfoCard from \"./DeckInfoCard\";\nimport Study from \"./Study\";\nimport AddCard from \"../Card/AddCard\";\nimport EditDeck from \"./EditDeck\";\n\nfunction Deck() {\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState([{}]);\n\n  const handleDeleteDeck = async e => {\n    if (window.confirm('Delete this deck?')) {\n      await deleteDeck(e.target.getAttribute(\"data-index\"));\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/cards/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Study, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EditDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeckInfoCard, {\n    deck: deck,\n    deckId: deckId,\n    handleDeleteDeck: handleDeleteDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Cards, {\n    deckId: deckId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Deck;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Deck/Deck.js"],"names":["React","useState","useEffect","Switch","Route","useParams","useHistory","deleteDeck","readDeck","listCards","Cards","DeckInfoCard","Study","AddCard","EditDeck","Deck","deckId","history","deck","setDeck","handleDeleteDeck","e","window","confirm","target","getAttribute","push","abortController","AbortController","fetchDeck","signal","abort"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,uBAAhD;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AACA,QAAMY,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;;AAEA,QAAMmB,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClC,QAAIC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAJ,EAAyC;AACrC,YAAMhB,UAAU,CAACc,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAD,CAAhB;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACH;AACJ,GALD;;AAOAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,SAAS,GAAG,YAAYV,OAAO,CAAC,MAAMX,QAAQ,CAACQ,MAAD,EAASW,eAAe,CAACG,MAAzB,CAAf,CAArC;;AACAD,IAAAA,SAAS;AACT,WAAO,MAAMF,eAAe,CAACI,KAAhB,EAAb;AACH,GANQ,EAMN,CAACf,MAAD,CANM,CAAT;AAQA,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,0BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,eAUI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEE,IAApB;AAA0B,IAAA,MAAM,EAAEF,MAAlC;AAA0C,IAAA,gBAAgB,EAAEI,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,CADJ,CADJ;AAmBH;;AACD,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck, listCards } from \"../../utils/api/index\";\r\nimport Cards from \"../Card/Cards\";\r\nimport DeckInfoCard from \"./DeckInfoCard\";\r\nimport Study from \"./Study\";\r\nimport AddCard from \"../Card/AddCard\";\r\nimport EditDeck from \"./EditDeck\";\r\n\r\nfunction Deck() {\r\n    const { deckId } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [deck, setDeck] = useState([{}]);\r\n\r\n    const handleDeleteDeck = async (e) => {\r\n        if (window.confirm('Delete this deck?')) {\r\n            await deleteDeck(e.target.getAttribute(\"data-index\"));\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck();\r\n        return () => abortController.abort();\r\n    }, [deckId]);\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/decks/:deckId/cards/new\">\r\n                    <AddCard />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/study\">\r\n                    <Study />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/edit\">\r\n                    <EditDeck />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId\">\r\n                    <DeckInfoCard deck={deck} deckId={deckId} handleDeleteDeck={handleDeleteDeck} />\r\n                    <Cards deckId={deckId} />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\nexport default Deck;"]},"metadata":{},"sourceType":"module"}