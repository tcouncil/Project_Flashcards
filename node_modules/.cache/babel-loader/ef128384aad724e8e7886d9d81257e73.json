{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { PencilIcon } from '@primer/octicons-react';\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { deleteCard, readCard } from \"../utils/api/index\";\n\nfunction Card({\n  index\n}) {\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  const [card, setCard] = useState();\n\n  const handleDeleteCard = async e => {\n    if (window.confirm('Delete this card?')) {\n      await deleteCard(e.target.getAttribute(\"data-index\"));\n    }\n\n    const fetchCard = async () => setCard(await readCard());\n\n    fetchDecks();\n  };\n\n  useEffect(() => {\n    const fetchCard = async () => setDeck(await readDeck(deckId));\n\n    fetchDeck();\n\n    const fetchCards = async () => setCards(await listCards(deckId));\n\n    fetchCards();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"row text-center d-flex justify-content-center mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, card.front), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, card.back)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${card.deckId}/cards/${card.id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PencilIcon, {\n    size: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }), \" Edit\")), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-index\": card.id,\n    className: \"btn btn-danger\",\n    onClick: handleDeleteCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Delete\"))))));\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Card.js"],"names":["React","useEffect","useState","PencilIcon","Link","useParams","useHistory","deleteCard","readCard","Card","index","deckId","cardId","history","card","setCard","handleDeleteCard","e","window","confirm","target","getAttribute","fetchCard","fetchDecks","setDeck","readDeck","fetchDeck","fetchCards","setCards","listCards","front","back","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,UAAT,EAAoBC,QAApB,QAAoC,oBAApC;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACrB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;;AAEA,QAAMc,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClC,QAAIC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAJ,EAAyC;AACrC,YAAMZ,UAAU,CAACU,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAD,CAAhB;AACH;;AAED,UAAMC,SAAS,GAAG,YAAYP,OAAO,CAAC,MAAMP,QAAQ,EAAf,CAArC;;AACAe,IAAAA,UAAU;AACb,GAPD;;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,SAAS,GAAG,YAAYE,OAAO,CAAC,MAAMC,QAAQ,CAACd,MAAD,CAAf,CAArC;;AACAe,IAAAA,SAAS;;AAET,UAAMC,UAAU,GAAG,YAAYC,QAAQ,CAAC,MAAMC,SAAS,CAAClB,MAAD,CAAhB,CAAvC;;AACAgB,IAAAA,UAAU;AACb,GANQ,EAMN,EANM,CAAT;AAOA,sBAAQ,uDACJ;AAAK,IAAA,GAAG,EAAEjB,KAAV;AAAiB,IAAA,SAAS,EAAC,oDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCI,IAAI,CAACgB,KAArC,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgChB,IAAI,CAACiB,IAArC,CAFJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASjB,IAAI,CAACH,MAAO,UAASG,IAAI,CAACkB,EAAG,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,UADJ,CADJ,eAQI;AAAQ,kBAAYlB,IAAI,CAACkB,EAAzB;AAA6B,IAAA,SAAS,EAAC,gBAAvC;AAAwD,IAAA,OAAO,EAAEhB,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ,CANJ,CADJ,CADI,CAAR;AAyBH;;AAED,eAAeP,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PencilIcon } from '@primer/octicons-react';\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteCard,readCard } from \"../utils/api/index\";\r\n\r\nfunction Card({ index }) {\r\n    const { deckId, cardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [card, setCard] = useState();\r\n\r\n    const handleDeleteCard = async (e) => {\r\n        if (window.confirm('Delete this card?')) {\r\n            await deleteCard(e.target.getAttribute(\"data-index\"));\r\n        }\r\n\r\n        const fetchCard = async () => setCard(await readCard())\r\n        fetchDecks();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchCard = async () => setDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n\r\n        const fetchCards = async () => setCards(await listCards(deckId));\r\n        fetchCards();\r\n    }, []);\r\n    return (<>\r\n        <div key={index} className=\"row text-center d-flex justify-content-center mt-1\">\r\n            <div className=\"card w-100\">\r\n                <div className=\"card-body row\">\r\n                    <p className=\"card-text col-6\">{card.front}</p>\r\n                    <p className=\"card-text col-6\">{card.back}</p>\r\n                </div>\r\n                {/* Clicking the View button brings the user to the Edit Deck screen */}\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <div>\r\n                        <Link to={`/decks/${card.deckId}/cards/${card.id}/edit`}>\r\n                            <button className=\"btn btn-secondary mr-1\">\r\n                                <PencilIcon size={22} /> Edit\r\n                                    </button>\r\n                        </Link>\r\n\r\n                        {/* Clicking the Delete button shows a warning message before deleting the deck */}\r\n                        <button data-index={card.id} className=\"btn btn-danger\" onClick={handleDeleteCard}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}