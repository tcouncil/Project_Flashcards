{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport { deleteCard, readDeck } from \"../../utils/api/index\";\n\nfunction Cards() {\n  const {\n    deckId\n  } = useParams();\n  let content = [\"\"];\n  const [deck, setDeck] = useState({}); // initalize the deck using params\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, [deckId]); // initalize the deck using params\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, []);\n\n  const handleDeleteCard = async e => {\n    if (window.confirm('Delete this card?')) {\n      await deleteCard(e.target.getAttribute(\"data-index\"));\n    }\n  };\n\n  if (deck.id) content = deck.cards.map((card, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      card: card,\n      index: index,\n      handleDeleteCard: handleDeleteCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Cards\")), deck.cards ? content : null);\n}\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Card/Cards.js"],"names":["React","useState","useEffect","useParams","Card","deleteCard","readDeck","Cards","deckId","content","deck","setDeck","abortController","AbortController","fetchDeck","signal","abort","handleDeleteCard","e","window","confirm","target","getAttribute","id","cards","map","card","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAaL,SAAS,EAA5B;AACA,MAAIM,OAAO,GAAG,CAAC,EAAD,CAAd;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAJa,CAMb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,SAAS,GAAG,YAAYH,OAAO,CAAC,MAAML,QAAQ,CAACE,MAAD,EAASI,eAAe,CAACG,MAAzB,CAAf,CAArC;;AACAD,IAAAA,SAAS;AACT,WAAO,MAAMF,eAAe,CAACI,KAAhB,EAAb;AACH,GALQ,EAKN,CAACR,MAAD,CALM,CAAT,CAPa,CAcb;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,SAAS,GAAG,YAAYH,OAAO,CAAC,MAAML,QAAQ,CAACE,MAAD,EAASI,eAAe,CAACG,MAAzB,CAAf,CAArC;;AACAD,IAAAA,SAAS;AACT,WAAO,MAAMF,eAAe,CAACI,KAAhB,EAAb;AACH,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMC,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClC,QAAIC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAJ,EAAyC;AACrC,YAAMf,UAAU,CAACa,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAD,CAAhB;AACH;AACJ,GAJD;;AAMA,MAAIZ,IAAI,CAACa,EAAT,EACId,OAAO,GAAGC,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,wBAAQ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,KAAK,EAAEC,KAAzB;AAAgC,MAAA,gBAAgB,EAAEV,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAFS,CAAV;AAGJ,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADI,EAIHP,IAAI,CAACc,KAAL,GAAaf,OAAb,GAAuB,IAJpB,CAAR;AAOH;;AAED,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from \"./Card\";\r\nimport { deleteCard, readDeck } from \"../../utils/api/index\";\r\n\r\nfunction Cards() {\r\n    const { deckId } = useParams();\r\n    let content = [\"\"];\r\n\r\n    const [deck, setDeck] = useState({})\r\n\r\n    // initalize the deck using params\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck();\r\n        return () => abortController.abort();\r\n    }, [deckId])\r\n\r\n    // initalize the deck using params\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck();\r\n        return () => abortController.abort();\r\n    }, [])\r\n\r\n\r\n    const handleDeleteCard = async (e) => {\r\n        if (window.confirm('Delete this card?')) {\r\n            await deleteCard(e.target.getAttribute(\"data-index\"));\r\n        }\r\n    }\r\n\r\n    if (deck.id)\r\n        content = deck.cards.map((card, index) => {\r\n            return (<Card card={card} index={index} handleDeleteCard={handleDeleteCard} />);\r\n        });\r\n    return (<>\r\n        <div className=\"row mt-3\">\r\n            <h3>Cards</h3>\r\n        </div>\r\n        {deck.cards ? content : null}\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}