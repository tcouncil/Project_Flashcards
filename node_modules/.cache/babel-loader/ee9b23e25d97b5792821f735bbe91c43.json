{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\nimport { readDeck } from \"../../utils/api/index\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Study() {\n  const {\n    deckId\n  } = useParams();\n  const [cardNum, setCardNum] = useState(1);\n  const [cardText, setCardText] = useState(\"front\");\n  const [cardTotal, setCardTotal] = useState(0);\n  const [onBack, setOnBack] = useState(false);\n  const [onEnd, setOnEnd] = useState(false);\n  const [deck, setDeck] = useState([{\n    cards: {\n      front: \"front\",\n      back: \"back\"\n    }\n  }]);\n\n  const flip = e => {\n    if (deck.cards) if (cardText === deck.cards[cardNum - 1].front) {\n      setCardText(text => text = deck.cards[cardNum - 1].back);\n      if (cardNum !== cardTotal) setOnBack(bool => bool = true);else setOnEnd(bool => bool = true);\n    } else {\n      setCardText(text => text = deck.cards[cardNum - 1].front);\n    }\n  };\n\n  const next = e => {\n    if (deck.cards) setCardText(text => text = deck.cards[cardNum].front);\n    setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\n    setOnBack(bool => bool = false);\n  };\n\n  const reset = e => {\n    if (deck.cards) setCardText(text => text = deck.cards[0].front);\n    setCardNum(num => num = 1);\n    setOnBack(bool => bool = false);\n    setOnEnd(bool => bool = false);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    if (deck.cards) {\n      setCardTotal(deck.cards.length);\n      setCardText(deck.cards[cardNum - 1].front);\n    }\n  }, [deck, cardNum]);\n  if (deck.cards) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: deck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Study: \", deck.name)), cardTotal > 2 ? /*#__PURE__*/React.createElement(StudyCard, {\n    cardText: cardText,\n    onBack: onBack,\n    onEnd: onEnd,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardTotal: cardTotal,\n    next: next,\n    flip: flip,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(StudyNotEnoughCards, {\n    cardLength: cardTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 203\n    }\n  }));else return null;\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Deck/Study.js"],"names":["React","useState","useEffect","BreadCrumbNav","StudyCard","StudyNotEnoughCards","readDeck","useParams","Study","deckId","cardNum","setCardNum","cardText","setCardText","cardTotal","setCardTotal","onBack","setOnBack","onEnd","setOnEnd","deck","setDeck","cards","front","back","flip","e","text","bool","next","num","length","reset","abortController","AbortController","fetchDeck","signal","abort","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BreadCrumbNav from \"../Common/BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Study() {\r\n    const { deckId } = useParams();\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardText, setCardText] = useState(\"front\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n    const [onBack, setOnBack] = useState(false);\r\n    const [onEnd, setOnEnd] = useState(false);\r\n    const [deck, setDeck] = useState([{ cards: { front: \"front\", back: \"back\" } }]);\r\n\r\n    const flip = (e) => {\r\n        if (deck.cards)\r\n            if (cardText === deck.cards[cardNum - 1].front) {\r\n                setCardText(text => text = deck.cards[cardNum - 1].back)\r\n                if (cardNum !== cardTotal)\r\n                    setOnBack(bool => bool = true);\r\n                else\r\n                    setOnEnd(bool => bool = true);\r\n            }\r\n            else {\r\n                setCardText(text => text = deck.cards[cardNum - 1].front)\r\n            }\r\n    }\r\n\r\n    const next = (e) => {\r\n        if (deck.cards)\r\n            setCardText(text => text = deck.cards[cardNum].front);\r\n        setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\r\n        setOnBack(bool => bool = false);\r\n    }\r\n\r\n    const reset = (e) => {\r\n        if (deck.cards)\r\n            setCardText(text => text = deck.cards[0].front);\r\n        setCardNum(num => num = 1);\r\n        setOnBack(bool => bool = false);\r\n        setOnEnd(bool => bool = false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck()\r\n\r\n        return () => abortController.abort();\r\n    }, [deckId]);\r\n\r\n    useEffect(() => {\r\n        if (deck.cards) {\r\n            setCardTotal(deck.cards.length);\r\n            setCardText(deck.cards[cardNum - 1].front);\r\n        }\r\n    }, [deck, cardNum]);\r\n\r\n    if (deck.cards)\r\n        return (\r\n            <>\r\n                <BreadCrumbNav link={`/decks/${deckId}`} linkName={deck.name} pageName={'Study'} />\r\n                <div className=\"row\">\r\n                    <h1>Study: {deck.name}</h1>\r\n                </div>\r\n                { cardTotal > 2 ? <StudyCard cardText={cardText} onBack={onBack} onEnd={onEnd} cardNum={cardNum} setCardNum={setCardNum} cardTotal={cardTotal} next={next} flip={flip} reset={reset} /> : <StudyNotEnoughCards cardLength={cardTotal} />}\r\n            </>\r\n        );\r\n    else\r\n        return null;\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}