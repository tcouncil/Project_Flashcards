{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadCrumbNav from \"./Common/BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\nimport { deleteDeck, readDeck, listCards } from \"../utils/api/index\";\n\nfunction Study() {\n  const [cardNum, setCardNum] = useState(1);\n  const [cardText, setCardText] = useState(\"front\");\n  const [cardTotal, setCardTotal] = useState(0);\n  const [onBack, setOnBack] = useState(false);\n  const [onEnd, setOnEnd] = useState(false);\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\n\n    fetchDeck();\n    return () => abortController.abort();\n  }, []);\n\n  const flip = e => {\n    if (cardText === deck.cards[cardNum - 1].front) {\n      setCardText(text => text = deck.cards[cardNum - 1].back);\n      if (cardNum !== cardTotal) setOnBack(bool => bool = true);else setOnEnd(bool => bool = true);\n    } else {\n      setCardText(text => text = deck.cards[cardNum - 1].front);\n    }\n  };\n\n  const next = e => {\n    setCardText(text => text = deck.cards[cardNum].front);\n    setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\n    setOnBack(bool => bool = false);\n  };\n\n  const reset = e => {\n    setCardText(text => text = deck.cards[0].front);\n    setCardNum(num => num = 1);\n    setOnBack(bool => bool = false);\n    setOnEnd(bool => bool = false);\n  };\n\n  useEffect(() => {\n    setCardTotal(deck.cards.length);\n    setCardText(deck.cards[cardNum - 1].front);\n  }, [deck.cards]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: deck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Study: \", deck.name)), /*#__PURE__*/React.createElement(StudyCard, {\n    cardText: cardText,\n    onBack: onBack,\n    onEnd: onEnd,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardTotal: cardTotal,\n    next: next,\n    flip: flip,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","BreadCrumbNav","StudyCard","Switch","Route","useParams","useHistory","deleteDeck","readDeck","listCards","Study","cardNum","setCardNum","cardText","setCardText","cardTotal","setCardTotal","onBack","setOnBack","onEnd","setOnEnd","deckId","deck","setDeck","abortController","AbortController","fetchDeck","signal","abort","flip","e","cards","front","text","back","bool","next","num","length","reset","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,oBAAhD;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,SAAS,GAAG,YAAYH,OAAO,CAAC,MAAMf,QAAQ,CAACa,MAAD,EAASG,eAAe,CAACG,MAAzB,CAAf,CAArC;;AACAD,IAAAA,SAAS;AAET,WAAO,MAAMF,eAAe,CAACI,KAAhB,EAAb;AACH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,IAAI,GAAIC,CAAD,IAAO;AAChB,QAAIjB,QAAQ,KAAKS,IAAI,CAACS,KAAL,CAAWpB,OAAO,GAAG,CAArB,EAAwBqB,KAAzC,EAAgD;AAC5ClB,MAAAA,WAAW,CAACmB,IAAI,IAAIA,IAAI,GAAGX,IAAI,CAACS,KAAL,CAAWpB,OAAO,GAAG,CAArB,EAAwBuB,IAAxC,CAAX;AACA,UAAIvB,OAAO,KAAKI,SAAhB,EACIG,SAAS,CAACiB,IAAI,IAAIA,IAAI,GAAG,IAAhB,CAAT,CADJ,KAGIf,QAAQ,CAACe,IAAI,IAAIA,IAAI,GAAG,IAAhB,CAAR;AACP,KAND,MAOK;AACDrB,MAAAA,WAAW,CAACmB,IAAI,IAAIA,IAAI,GAAGX,IAAI,CAACS,KAAL,CAAWpB,OAAO,GAAG,CAArB,EAAwBqB,KAAxC,CAAX;AACH;AACJ,GAXD;;AAaA,QAAMI,IAAI,GAAIN,CAAD,IAAO;AAChBhB,IAAAA,WAAW,CAACmB,IAAI,IAAIA,IAAI,GAAGX,IAAI,CAACS,KAAL,CAAWpB,OAAX,EAAoBqB,KAApC,CAAX;AACApB,IAAAA,UAAU,CAACyB,GAAG,IAAIA,GAAG,GAAGf,IAAI,CAACS,KAAL,CAAWO,MAAjB,GAA0BD,GAAG,GAAG,CAAhC,GAAoCA,GAAG,GAAG,CAAlD,CAAV;AACAnB,IAAAA,SAAS,CAACiB,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAT;AACH,GAJD;;AAMA,QAAMI,KAAK,GAAIT,CAAD,IAAO;AACjBhB,IAAAA,WAAW,CAACmB,IAAI,IAAIA,IAAI,GAAGX,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcC,KAA9B,CAAX;AACApB,IAAAA,UAAU,CAACyB,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAV;AACAnB,IAAAA,SAAS,CAACiB,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAT;AACAf,IAAAA,QAAQ,CAACe,IAAI,IAAIA,IAAI,GAAG,KAAhB,CAAR;AACH,GALD;;AAOAnC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAACM,IAAI,CAACS,KAAL,CAAWO,MAAZ,CAAZ;AACAxB,IAAAA,WAAW,CAACQ,IAAI,CAACS,KAAL,CAAWpB,OAAO,GAAG,CAArB,EAAwBqB,KAAzB,CAAX;AACH,GAHQ,EAGN,CAACV,IAAI,CAACS,KAAN,CAHM,CAAT;AAKA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,UAASV,MAAO,EAAtC;AAAyC,IAAA,QAAQ,EAAEC,IAAI,CAACkB,IAAxD;AAA8D,IAAA,QAAQ,EAAE,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYlB,IAAI,CAACkB,IAAjB,CADJ,CAFJ,eAKI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE3B,QAArB;AAA+B,IAAA,MAAM,EAAEI,MAAvC;AAA+C,IAAA,KAAK,EAAEE,KAAtD;AAA6D,IAAA,OAAO,EAAER,OAAtE;AAA+E,IAAA,UAAU,EAAEC,UAA3F;AAAuG,IAAA,SAAS,EAAEG,SAAlH;AAA6H,IAAA,IAAI,EAAEqB,IAAnI;AAAyI,IAAA,IAAI,EAAEP,IAA/I;AAAqJ,IAAA,KAAK,EAAEU,KAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAe7B,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BreadCrumbNav from \"./Common/BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck, listCards } from \"../utils/api/index\";\r\n\r\nfunction Study() {\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [cardText, setCardText] = useState(\"front\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n    const [onBack, setOnBack] = useState(false);\r\n    const [onEnd, setOnEnd] = useState(false);\r\n\r\n    const { deckId } = useParams();\r\n    const [deck, setDeck] = useState({});\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController()\r\n        \r\n        const fetchDeck = async () => setDeck(await readDeck(deckId, abortController.signal));\r\n        fetchDeck();\r\n\r\n        return () => abortController.abort()\r\n    }, []);\r\n\r\n    const flip = (e) => {\r\n        if (cardText === deck.cards[cardNum - 1].front) {\r\n            setCardText(text => text = deck.cards[cardNum - 1].back)\r\n            if (cardNum !== cardTotal)\r\n                setOnBack(bool => bool = true);\r\n            else\r\n                setOnEnd(bool => bool = true);\r\n        }\r\n        else {\r\n            setCardText(text => text = deck.cards[cardNum - 1].front)\r\n        }\r\n    }\r\n\r\n    const next = (e) => {\r\n        setCardText(text => text = deck.cards[cardNum].front);\r\n        setCardNum(num => num < deck.cards.length ? num + 1 : num + 0);\r\n        setOnBack(bool => bool = false);\r\n    }\r\n\r\n    const reset = (e) => {\r\n        setCardText(text => text = deck.cards[0].front);\r\n        setCardNum(num => num = 1);\r\n        setOnBack(bool => bool = false);\r\n        setOnEnd(bool => bool = false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCardTotal(deck.cards.length);\r\n        setCardText(deck.cards[cardNum - 1].front);\r\n    }, [deck.cards]);\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={deck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {deck.name}</h1>\r\n            </div>\r\n            <StudyCard cardText={cardText} onBack={onBack} onEnd={onEnd} cardNum={cardNum} setCardNum={setCardNum} cardTotal={cardTotal} next={next} flip={flip} reset={reset} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}