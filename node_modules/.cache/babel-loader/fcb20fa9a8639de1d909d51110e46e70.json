{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\CardForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readCard } from \"../../utils/api/index\";\nexport default function CardForm({\n  onSubmit,\n  handleFrontChange,\n  handleBackChange\n}) {\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchCard = async () => setCard(await readCard(cardId, abortController));\n\n    fetchCard();\n    return () => abortController.abort();\n  }, [cardId, deckId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"font-weight-bold\",\n    htmlFor: \"deck-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Front\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    required: true,\n    className: \"form-control\",\n    onChange: handleFrontChange,\n    defaultValue: card.front,\n    placeholder: \"Front side of card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"font-weight-bold\",\n    htmlFor: \"deck-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    required: true,\n    className: \"form-control\",\n    onChange: handleBackChange,\n    defaultValue: card.back,\n    placeholder: \"Back side of card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 47\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Save\")));\n}","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Card/CardForm.js"],"names":["React","useState","useEffect","Link","useParams","readCard","CardForm","onSubmit","handleFrontChange","handleBackChange","deckId","cardId","card","setCard","abortController","AbortController","fetchCard","abort","front","back"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,iBAAZ;AAA+BC,EAAAA;AAA/B,CAAlB,EAAqE;AAChF,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,SAAS,GAAG,YAAYH,OAAO,CAAC,MAAMR,QAAQ,CAACM,MAAD,EAASG,eAAT,CAAf,CAArC;;AACAE,IAAAA,SAAS;AAET,WAAO,MAAMF,eAAe,CAACG,KAAhB,EAAb;AACH,GANQ,EAMN,CAACN,MAAD,EAASD,MAAT,CANM,CAAT;AASA,sBACI,uDACI;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,QAAQ,EAAEH,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,SAAS,EAAC,cAAzC;AAAwD,IAAA,QAAQ,EAAEC,iBAAlE;AAAqF,IAAA,YAAY,EAAEI,IAAI,CAACM,KAAxG;AAA+G,IAAA,WAAW,EAAE,oBAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,SAAS,EAAC,cAAzC;AAAwD,IAAA,QAAQ,EAAET,gBAAlE;AAAoF,IAAA,YAAY,EAAEG,IAAI,CAACO,IAAvG;AAA6G,IAAA,WAAW,EAAE,mBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAAST,MAAO,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9B,CATJ,eAUI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,CADJ,CADJ;AAiBH","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { readCard } from \"../../utils/api/index\";\r\n\r\nexport default function CardForm({ onSubmit, handleFrontChange, handleBackChange }) {\r\n    const { deckId, cardId } = useParams();\r\n    const [card, setCard] = useState({});\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const fetchCard = async () => setCard(await readCard(cardId, abortController));\r\n        fetchCard();\r\n\r\n        return () => abortController.abort();\r\n    }, [cardId, deckId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"row\" onSubmit={onSubmit}>\r\n                <div className=\"form-group w-100\">\r\n                    <label className=\"font-weight-bold\" htmlFor=\"deck-description\">Front</label>\r\n                    <textarea type=\"text\" required className=\"form-control\" onChange={handleFrontChange} defaultValue={card.front} placeholder={\"Front side of card\"} />\r\n                </div>\r\n                <div className=\"form-group w-100\">\r\n                    <label className=\"font-weight-bold\" htmlFor=\"deck-description\">Back</label>\r\n                    <textarea type=\"text\" required className=\"form-control\" onChange={handleBackChange} defaultValue={card.back} placeholder={\"Back side of card\"} />\r\n                </div>\r\n                <Link to={`/decks/${deckId}`}><button className=\"btn btn-secondary mr-2\">Done</button></Link>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n            </form>\r\n        </>\r\n    );\r\n \r\n}"]},"metadata":{},"sourceType":"module"}