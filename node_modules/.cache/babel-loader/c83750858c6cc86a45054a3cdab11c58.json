{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\nimport { deleteDeck, readDeck, listCards } from \"../utils/api/index\";\nimport BreadCrumbNav from \"./BreadCrumbNav\";\nimport Cards from \"./Cards\";\nimport DeckInfoCard from \"./DeckInfoCard\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\n\nfunction Deck({\n  decks,\n  cards,\n  setCards\n}) {\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n\n  const handleDeleteDeck = async e => {\n    if (window.confirm('Delete this deck?')) {\n      await deleteDeck(e.target.getAttribute(\"data-index\"));\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchDeck = async () => setDeck(await readDeck(deckId));\n\n    fetchDeck();\n\n    const fetchCards = async () => setCards(await listCards(deckId));\n\n    fetchCards();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Study, {\n    decks: decks,\n    cards: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EditDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    pageName: deck.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DeckInfoCard, {\n    deck: deck,\n    deckId: deckId,\n    handleDeleteDeck: handleDeleteDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Cards, {\n    cards: cards,\n    setCards: setCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Deck;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":["React","useState","useEffect","Switch","Route","useParams","useHistory","deleteDeck","readDeck","listCards","BreadCrumbNav","Cards","DeckInfoCard","Study","EditDeck","Deck","decks","cards","setCards","deckId","history","deck","setDeck","handleDeleteDeck","e","window","confirm","target","getAttribute","push","fetchDeck","fetchCards","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAd,EAA0C;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAad,SAAS,EAA5B;AACA,QAAMe,OAAO,GAAGd,UAAU,EAA1B;AAEA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMsB,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClC,QAAIC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAJ,EAAyC;AACrC,YAAMnB,UAAU,CAACiB,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAD,CAAhB;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACH;AACJ,GALD;;AAOA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4B,SAAS,GAAG,YAAYR,OAAO,CAAC,MAAMd,QAAQ,CAACW,MAAD,CAAf,CAArC;;AACAW,IAAAA,SAAS;;AAET,UAAMC,UAAU,GAAG,YAAYb,QAAQ,CAAC,MAAMT,SAAS,CAACU,MAAD,CAAhB,CAAvC;;AACAY,IAAAA,UAAU;AACb,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEI,IAAI,CAACW,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEX,IAApB;AAA0B,IAAA,MAAM,EAAEF,MAAlC;AAA0C,IAAA,gBAAgB,EAAEI,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,KAAd;AAAqB,IAAA,QAAQ,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CADJ,CADJ;AAiBH;;AACD,eAAeH,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck, listCards } from \"../utils/api/index\";\r\nimport BreadCrumbNav from \"./BreadCrumbNav\";\r\nimport Cards from \"./Cards\";\r\nimport DeckInfoCard from \"./DeckInfoCard\";\r\nimport Study from \"./Study\";\r\nimport EditDeck from \"./EditDeck\";\r\n\r\nfunction Deck({ decks, cards, setCards }) {\r\n    const { deckId } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [deck, setDeck] = useState([]);\r\n\r\n    const handleDeleteDeck = async (e) => {\r\n        if (window.confirm('Delete this deck?')) {\r\n            await deleteDeck(e.target.getAttribute(\"data-index\"));\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchDeck = async () => setDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n\r\n        const fetchCards = async () => setCards(await listCards(deckId));\r\n        fetchCards();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/decks/:deckId/study\">\r\n                    <Study decks={decks} cards={cards} />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/edit\">\r\n                    <EditDeck />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId\">\r\n                    <BreadCrumbNav pageName={deck.name} />\r\n                    <DeckInfoCard deck={deck} deckId={deckId} handleDeleteDeck={handleDeleteDeck} />\r\n                    <Cards cards={cards} setCards={setCards} />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\nexport default Deck;"]},"metadata":{},"sourceType":"module"}