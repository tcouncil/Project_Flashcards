{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travis\\\\projects\\\\Thinkful\\\\react\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck, listCards, readCard } from \"../utils/api/index\";\nimport BreadCrumbNav from \"./BreadCrumbNav\";\nimport StudyCard from \"./StudyCard\";\n\nfunction Study() {\n  const {\n    deckId\n  } = useParams();\n  const [studyDeck, setStudyDeck] = useState([]);\n  const [cards, setCards] = useState([{\n    front: \"front\"\n  }]);\n  const [cardId, setCardId] = useState(0);\n  const [cardNum, setCardNum] = useState(1);\n  const [front, setFront] = useState(\"front of card\");\n  const [back, setBack] = useState(\"back of card\");\n  const [cardTotal, setCardTotal] = useState(0);\n  useEffect(() => {\n    const fetchDeck = async () => setStudyDeck(await readDeck(deckId));\n\n    fetchDeck();\n\n    const fetchCards = async () => setCards(await listCards(deckId));\n\n    fetchCards();\n  }, []);\n  useEffect(() => {\n    setFront(text => text = Object.values(cards)[cardNum - 1].front);\n  }, [cards]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumbNav, {\n    link: `/decks/${deckId}`,\n    linkName: studyDeck.name,\n    pageName: 'Study',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Study: \", studyDeck.name)), /*#__PURE__*/React.createElement(StudyCard, {\n    cards: cards,\n    cardNum: cardNum,\n    setCardNum: setCardNum,\n    cardId: cardId,\n    front: front,\n    setFront: setFront,\n    back: back,\n    cardTotal: cardTotal,\n    setCardTotal: setCardTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/Travis/projects/Thinkful/react/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","useParams","readDeck","listCards","readCard","BreadCrumbNav","StudyCard","Study","deckId","studyDeck","setStudyDeck","cards","setCards","front","cardId","setCardId","cardNum","setCardNum","setFront","back","setBack","cardTotal","setCardTotal","fetchDeck","fetchCards","text","Object","values","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,oBAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAC;AAACc,IAAAA,KAAK,EAAC;AAAP,GAAD,CAAD,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQK,QAAR,IAAoBnB,QAAQ,CAAC,eAAD,CAAlC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,cAAD,CAAhC;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,SAAS,GAAG,YAAYb,YAAY,CAAC,MAAMR,QAAQ,CAACM,MAAD,CAAf,CAA1C;;AACAe,IAAAA,SAAS;;AAET,UAAMC,UAAU,GAAG,YAAYZ,QAAQ,CAAC,MAAMT,SAAS,CAACK,MAAD,CAAhB,CAAvC;;AACAgB,IAAAA,UAAU;AACb,GANQ,EAMN,EANM,CAAT;AAQAxB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACO,IAAI,IAAIA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAqBK,OAAO,GAAC,CAA7B,EAAgCH,KAAhD,CAAR;AACH,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAOA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,UAASH,MAAO,EAAtC;AAAyC,IAAA,QAAQ,EAAEC,SAAS,CAACmB,IAA7D;AAAmE,IAAA,QAAQ,EAAE,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYnB,SAAS,CAACmB,IAAtB,CADJ,CAFJ,eAKI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEjB,KAAlB;AAAyB,IAAA,OAAO,EAAEK,OAAlC;AAA2C,IAAA,UAAU,EAAEC,UAAvD;AAAmE,IAAA,MAAM,EAAEH,MAA3E;AAAmF,IAAA,KAAK,EAAED,KAA1F;AAAiG,IAAA,QAAQ,EAAEK,QAA3G;AAAqH,IAAA,IAAI,EAAEC,IAA3H;AAAiI,IAAA,SAAS,EAAEE,SAA5I;AAAuJ,IAAA,YAAY,EAAEC,YAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readDeck, listCards, readCard } from \"../utils/api/index\";\r\nimport BreadCrumbNav from \"./BreadCrumbNav\";\r\nimport StudyCard from \"./StudyCard\";\r\n\r\nfunction Study() {\r\n    const { deckId } = useParams();\r\n    const [studyDeck, setStudyDeck] = useState([]);\r\n    const [cards, setCards] = useState([{front:\"front\"}]);\r\n    const [cardId, setCardId] = useState(0);\r\n    const [cardNum, setCardNum] = useState(1);\r\n    const [front, setFront] = useState(\"front of card\");\r\n    const [back, setBack] = useState(\"back of card\");\r\n    const [cardTotal, setCardTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchDeck = async () => setStudyDeck(await readDeck(deckId));\r\n        fetchDeck();\r\n\r\n        const fetchCards = async () => setCards(await listCards(deckId));\r\n        fetchCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFront(text => text = Object.values(cards)[cardNum-1].front);\r\n    }, [cards]);\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <BreadCrumbNav link={`/decks/${deckId}`} linkName={studyDeck.name} pageName={'Study'} />\r\n            <div className=\"row\">\r\n                <h1>Study: {studyDeck.name}</h1>\r\n            </div>\r\n            <StudyCard cards={cards} cardNum={cardNum} setCardNum={setCardNum} cardId={cardId} front={front} setFront={setFront} back={back} cardTotal={cardTotal} setCardTotal={setCardTotal} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}